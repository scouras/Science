#!/usr/bin/perl

package Lyse::BATCH_10PS;

use strict;
use warnings;
use Utility qw(:all);
use Data::Dumper;
use Ilmm;

# Not actually exporting anything
require Exporter;
our @ISA = qw(Exporter);
our %EXPORT_TAGS = ('all' => [qw()]);
our @EXPORT_OK = (@{$EXPORT_TAGS{'all'}});
our @EXPORT = qw();

# CVS VERSION INFORMATION (AUTOMAGICALLY GENERATED BY CVS)
'$Revision: 1.2 $'              =~ /^.Revision: (.*) \$/; our $REVISION   = $1;
'$Date: 2009/04/29 22:10:56 $'  =~ /^.Date: (.*) \$/;     our $CHECKED_IN = $1;
'$Author: scouras $'            =~ /^.Author: (.*) \$/;   our $AUTHOR     = $1;


############################################## DEFAULT CONFIGURATION

our %CONFIG_ANAL = (

  revision      => $REVISION,
  checked_in    => $CHECKED_IN,
  author        => $AUTHOR,

  resolution     => 10,
  
  overwrite_anal => 0,
 
  is_plotted     => 0, 
  wait_to_finish => 1,
  queue          => 'opterons',

);




######################################################### INITIALIZE

sub New {
  return bless {
    name => 'BATCH_10PS',
    %CONFIG_ANAL,
  };
}

sub Initialize {
  my $CONFIG_ANAL = $_[0];
  
  my %CONFIG_GLOBAL = $_[1] ? %{$_[1]} : ();
  my $ANAL = { 
    %$CONFIG_ANAL, 
    %CONFIG_GLOBAL,
  };
  
  $ANAL->{'title'} = 'BATCH_10PS';

  return bless $ANAL;
}




########################################################### GET JOBS

sub Get_Jobs {

  my $ANAL    = $_[0];
  my $ILMM    = $_[1];
  my $REGION  = $_[2];

  # BATCH only executes on whole molecules
  if ( not defined $REGION->{'molecule'} ) { return }
  if ( not defined $REGION->{'index'   } ) { return }
  if ( $REGION->{'period'}               ) { return }


  # SET UP JOB
  my $job = Lyse::Job::new ( $ANAL, $ILMM, $REGION, $ANAL->{'title'} );
  $job->{'resolution' } = $ANAL->{'resolution'};
  $job->{'line'       } = [   
                            #"dssp bridges extended", 
                            #"rmsd \@CA min.pdb nomatrix", 
                            #"congeneal 0 min.pdb", 
                            "sasa /net/programs/ilmm/lib/sasa/vdw.radii",
                            #"radgee 0 min.pdb",
                            "phipsi /users/scouras/analysis/ss.def 0",
                            "mcgeo",
                            "dihedral /net/programs/ilmm/lib/dihedral/dihedral.def 0",
                            "periodic",
                          ];
  $job->Validate_Initial();

  if ( wantarray ) { return ($job) }
  else             { return [$job] }
}



###################################################### VALIDATE JOBS
sub Validate_Job {
  return (0, "batch_override");
}

1

